import React, { useState, useEffect } from 'react';
import {
  StyleSheet,
  Text,
  View,
  FlatList,
  TouchableOpacity,
  Image,
  ScrollView,
} from 'react-native';
import * as Notifications from "expo-notifications";
import AsyncStorage from '@react-native-async-storage/async-storage';
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: false,
  }),
});



// You can import supported modules from npm
import { Card } from 'react-native-paper';

const DATA = [
  { id: '1', categoria: 'Lanches', img: require('../assets/lanches.png') },
  { id: '2', categoria: 'Pizzas', img: require('../assets/pizzas.png') },
  { id: '3', categoria: 'Sopas', img: require('../assets/sopas.png') },
  { id: '4', categoria: 'Bebidas', img: require('../assets/bebidas.png') },
  { id: '5', categoria: 'Sobremesas', img: require('../assets/sobremesa.png') },
];

const Item = ({ titulo, onPress, img }) => (
  <TouchableOpacity onPress={onPress} style={styles.itemContainer}>
    <Image source={img} style={styles.img} />
    <Text style={styles.texto}>{titulo}</Text>
  </TouchableOpacity>
);

const Lanches = [
  { id: '11', nome: 'Cheeseburger', preco: 18.9 },
  { id: '12', nome: 'X-Bacon', preco: 22.5 },
  { id: '13', nome: 'Hot Dog', preco: 12.0 },
  { id: '14', nome: 'Sanduíche Natural', preco: 14.0 },
  { id: '15', nome: 'Wrap de Frango', preco: 16.5 },
];

const Pizzas = [
  { id: '21', nome: 'Calabresa', preco: 35.0 },
  { id: '22', nome: 'Marguerita', preco: 38.0 },
  { id: '23', nome: 'Frango com Catupiry', preco: 42.0 },
  { id: '24', nome: 'Quatro Queijos', preco: 40.0 },
];

const Sopas = [
  { id: '31', nome: 'Sopa de Legumes', preco: 15.0 },
  { id: '32', nome: 'Caldo Verde', preco: 17.0 },
  { id: '33', nome: 'Canja de Galinha', preco: 16.0 },
];

const Bebidas = [
  { id: '41', nome: 'Refrigerante', preco: 6.0 },
  { id: '42', nome: 'Suco de Laranja', preco: 8.5 },
  { id: '43', nome: 'Suco de Uva', preco: 8.5 },
  { id: '44', nome: 'Água Mineral', preco: 4.0 },
  { id: '45', nome: 'Água com Gás', preco: 4.5 },
  { id: '46', nome: 'Chá Gelado', preco: 7.0 },
  { id: '47', nome: 'Milkshake', preco: 12.0 },
];


const Sobremesas = [
  { id: '51', nome: 'Pudim', preco: 9.0 },
  { id: '52', nome: 'Mousse de Maracujá', preco: 8.5 },
  { id: '53', nome: 'Brownie', preco: 11.0 },
  { id: '54', nome: 'Cheesecake', preco: 13.0 },
];

const ItemProdutos = ({ titulo, preco, onPress }) => (
  <TouchableOpacity onPress={onPress} style={styles.itemProdutoContainer}>
    <Text style={styles.texto}>{titulo}</Text>
    <Text style={styles.textoPreco}>R$ {preco}</Text>
  </TouchableOpacity>
);

export default function HomeScreen() {

  const [abrirProdutos, setAbrirProdutos] = useState(false);
  const [categoria, setCategoria] = useState([]); 

  function handleCategoriaSelecionada(cat) {
    switch (cat) {
      case 'Lanches':
        setCategoria(Lanches);
        break;
      case 'Pizzas':
        setCategoria(Pizzas);
        break;
      case 'Sopas':
        setCategoria(Sopas);
        break;
      case 'Bebidas':
        setCategoria(Bebidas);
        break;
      case 'Sobremesas':
        setCategoria(Sobremesas);
        break;
      default:
        setCategoria([]);
    }
    setAbrirProdutos(true);
  }

  useEffect(() => {
  async function requestPermission() {
    const { status } = await Notifications.requestPermissionsAsync();
    if (status !== 'granted') {
      alert('Permissão para notificações negada.');
    }
  }
  requestPermission();
}, []);

  async function handleAddCarrinho(nomeProduto, preco, id) {
  try {

    const carrinhoJson = await AsyncStorage.getItem('@carrinho');
    const carrinhoAtual = carrinhoJson ? JSON.parse(carrinhoJson) : [];

    let jaIncluido = carrinhoAtual.some(elemento => elemento.id === id);

    if (jaIncluido) {
    await Notifications.scheduleNotificationAsync({
    content: {
      title: '',
      body: `${nomeProduto} já está no carrinho!`,
    },
    trigger: null,
  });
  return;  
}

    const novoProduto = { nome: nomeProduto, preco, id: id };
    const novoCarrinho = [...carrinhoAtual, novoProduto];

    await AsyncStorage.setItem('@carrinho', JSON.stringify(novoCarrinho));

    await Notifications.scheduleNotificationAsync({
      content: {
        title: 'Produto adicionado ao carrinho!',
        body: `Você adicionou ${nomeProduto} por R$ ${preco.toFixed(2)}.`,
      },
      trigger: null,
    });

    console.log('Produto adicionado ao carrinho com sucesso!');
  } catch (error) {
    console.error('Erro ao adicionar produto no carrinho:', error);
  }
}

  return (
    <ScrollView style={styles.container}>
      {!abrirProdutos &&
        <>
      <Text style={styles.titulo}>Categorias</Text>
      <FlatList
        numColumns={2}
        columnWrapperStyle={styles.linha}
        data={DATA}
        renderItem={({ item }) => (
          <Item
            titulo={item.categoria}
            img={item.img}
            onPress={() => handleCategoriaSelecionada(item.categoria)}
          />
        )}
        keyExtractor={(item) => item.id}
      /> </>}

      {abrirProdutos && (
        <>
        <TouchableOpacity onPress={() => setAbrirProdutos(false)} style={styles.itemProdutoContainer}>
        <Text style={styles.texto}></Text>
        <Text style={styles.texto}>Voltar</Text>
        <Text style={styles.texto}></Text>
        </TouchableOpacity>
          <Text style={styles.titulo}>Produtos</Text>
          <FlatList
            data={categoria}
            renderItem={({ item }) => (
              <ItemProdutos titulo={item.nome} preco={item.preco} onPress={() => handleAddCarrinho(item.nome, item.preco, item.id)}/>
            )}
            keyExtractor={(item) => item.id}
          />
        </>
      )}
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'lightgrey',
    paddingHorizontal: 16,
    paddingTop: 20,
  },
  titulo: {
    fontSize: 28,
    fontWeight: '700',
    color: 'black',
    marginBottom: 16,
    textAlign: 'center',
  },
  linha: {
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  itemContainer: {
    flex: 1,
    marginHorizontal: 5,
    backgroundColor: 'white',
    paddingVertical: 20,
    borderRadius: 16,
    alignItems: 'center',
    justifyContent: 'center',
  },
  img: {
    width: 80,
    height: 80,
    marginBottom: 12,
    borderRadius: 10,
  },
  texto: {
    fontSize: 18,
    fontWeight: '700',
    color: 'black',
  },
  textoPreco: {
    fontSize: 16,
    fontWeight: '500',
    color: 'black',
  },
  itemProdutoContainer: {
    flex: 1,
    marginHorizontal: 5,
    backgroundColor: 'white',
    paddingVertical: 20,
    borderRadius: 16,
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 20,
    marginBottom: 10,
    flexDirection: 'row',
  },
});
